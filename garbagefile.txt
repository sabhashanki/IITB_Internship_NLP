    
"""
encode = {
3:'English',  
4: 'French', 
13: 'Spanish',
11: 'Portugeese',
8: 'Italian',
12 : 'Russian',
14: 'Sweedish',
10: 'Malayalam',
2 : 'Dutch',
0 : 'Arabic',
16 : 'Turkish',
5 : 'German',
15 : 'Tamil',
1 : 'Danish',
9 : 'Kannada',
6 : 'Greek',
7 : 'Hindi',
}
"""



"""model = Sequential()
model.add(Dense(100, input_dim=38700, activation='relu'))
model.add(Dense(100, activation='relu'))
model.add(Dense(50, activation='relu'))
model.add(Dense(17, activation='softmax'))
model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

#Train model
model.fit(xtrain, ytrain, epochs=4)"""

"""def prediction2(text):
    x = cv.transform([text]).toarray()
    lang = model.predict(x, verbose = 0)
    lang = np.argmax(lang)
    lang = le.inverse_transform([lang])
    print('ANN Prediction : ',lang[0])"""



"""languages = [
    'English', 'French', 'Dutch', 'Spanish', 'Greek', 'Russian', 'Danish', 'Italian',
    'Turkish', 'Swedish', 'Arabic', 'German'
    ]

for lang in languages:
    allwords = stopwords.words(lang)
    allstopwords.extend(allwords)
"""